
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.Mongo;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoDatabase;
import java.awt.event.ItemEvent;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author iacs
 */
public class BaseM extends javax.swing.JFrame {

    DB db;
    DBCollection tabla;

    /**
     * Creates new form BaseM
     */
    public BaseM() {
 
 /*       MongoClientURI connectionString = new MongoClientURI("mongodb://localhost:27017");
        MongoClient mongoClient = new MongoClient(connectionString);
        MongoDatabase database = mongoClient.getDatabase("GDC");
        tabla = db.getCollection("tabla");

        
            Mongo mongo = new Mongo("localhost",27017);
            db = mongo.getDB("GDC");
            System.out.println("DAtabase connecton successfull.");
            tabla = db.getCollection("collections");
   
        */
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/inmegen_logo.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton1.setText("Salir");
        jButton1.setActionCommand("0");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Tipo de CÃ¡ncer");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Proyecto");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adrenal Gland", "Bile Duct", "Bladder", "Blood", "Bode", "Bonde Marrow", "Brain", "Breast", "Cervix", "Colorectal", "Esophagus", "Eye", "Headend Neck", "Kidney", "Liver", "Lung", "Lymph Nodes", "Nervous System", "Ovary", "Pancreas", "Pleura", "Prostate", "Skin", "Soft Tissue", "Stomach", "Testis", "Thymus", "Thyroid", "Uterus" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Ver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Datos Clinicos de GDC");

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Classification of Tumor", "Alcohol Intensity", "Age at Diagnosis", "Days to Birth", "Days to Death", "Days to Last Folluwup", "Days to Last Known Disease Status", "Days to Recurrence", "Last Known Disease Status", "Morphology", "Primary Diagnosis", "Prior Mallgnancy", "Progression or Recurrence", "Site of Resection or Biopsy", "Tissue or Organ of Origin", "Tumor Grade", "Tumor Stage", "Vital Status"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(786, 786, 786)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(566, 566, 566)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
/*
        DBCursor cursor = tabla.find();

        while (cursor.hasNext()) {

            jComboBox2.setSelectedItem(jComboBox2);
        }
*/
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (this.jComboBox1.getSelectedIndex() > 0) {
                this.jComboBox2.setModel(new DefaultComboBoxModel(this.getProyeto(this.jComboBox1.getSelectedItem().toString())));
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        System.exit(0);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
        
        
        // TODO add your handling code here:
                
    }//GEN-LAST:event_jComboBox2ActionPerformed

    public String[] getProyeto(String cancer) {

        // Tipo de cÃ¡ncer 30
        // Proyectos de cÃ¡ncer 38
        String[] proyecto = new String[38];
        if (cancer.equalsIgnoreCase("Kidney")) {

            proyecto[0] = "TAGET-RT (Kidney)";
            proyecto[1] = "TCGA-KICH (Kidney)";
            proyecto[2] = "TCGA-KIRP (Kidney)";
            proyecto[3] = "TCGA-KIRK (Kidney)";
            proyecto[4] = "TARGET-WT (Kidney)";

        }
        if (cancer.equalsIgnoreCase("Brain")) {

            proyecto[0] = "TCGA-LGG (Brain)";
            proyecto[1] = "TCGA-GBT (Brain)";

        }
        if (cancer.equalsIgnoreCase("Netvous System")) {

            proyecto[0] = "TARGET-NBL (Netvous System)";

        }
        if (cancer.equalsIgnoreCase("Lung")) {

            proyecto[0] = "TCGA-LUCS (Lung)";
            proyecto[1] = "TCGA-LUAD (Lung)";

        }
        if (cancer.equalsIgnoreCase("Blood")) {

            proyecto[0] = "TARGET-AML (Blood)";

        }
        if (cancer.equalsIgnoreCase("Colorectal")) {

            proyecto[0] = "TCGA-READ (Colorectal)";
            proyecto[1] = "TCGA-COAD (Colorectal)";

        }
        if (cancer.equalsIgnoreCase("Uterus")) {

            proyecto[0] = "TCGA-UCS (Uterus)";
            proyecto[1] = "TCGA-UCEC (Uterus)";

        }
        if (cancer.equalsIgnoreCase("Ovary")) {

            proyecto[0] = "TCGA-OV (Ovary)";

        }
        if (cancer.equalsIgnoreCase("Head and Neck")) {

            proyecto[0] = "TCGA-HNCS (Head and Neck)";

        }
        if (cancer.equalsIgnoreCase("Thyroid")) {

            proyecto[0] = "TCGA-THCA (Thyroid)";

        }
        if (cancer.equalsIgnoreCase("Prostate")) {

            proyecto[0] = "TCGA-TRAD (Prostate)";

        }
        if (cancer.equalsIgnoreCase("Skin")) {

            proyecto[0] = "TCGA-SKCM (Skin)";

        }
        if (cancer.equalsIgnoreCase("Stomach")) {

            proyecto[0] = "TCGA-STAD (Stomach)";

        }
        if (cancer.equalsIgnoreCase("Bladder")) {

            proyecto[0] = "TCGA-BLCA (Bladder)";

        }
        if (cancer.equalsIgnoreCase("Bone")) {

            proyecto[0] = "TARGET-OS (Bone)";

        }
        if (cancer.equalsIgnoreCase("Liver")) {

            proyecto[0] = "TCGA-LIHC (Liver)";

        }
        if (cancer.equalsIgnoreCase("Cervix")) {

            proyecto[0] = "TCGA-CESC (Cervix)";

        }
        if (cancer.equalsIgnoreCase("Adrenal Gland")) {

            proyecto[0] = "TCGA-ACC (Adrenal Gland)";
            proyecto[1] = "TCGA-PCPG (Adrenal Gland)";

        }
        if (cancer.equalsIgnoreCase("Soft Tissue")) {

            proyecto[0] = "TCGA-SARC (Soft Tissue)";

        }
        if (cancer.equalsIgnoreCase("Bone Marrow")) {

            proyecto[0] = "TCGA-LAML (Bone Marrow)";

        }
        if (cancer.equalsIgnoreCase("Pancreas")) {

            proyecto[0] = "TCGA-PAAD (Pancreas)";

        }
        if (cancer.equalsIgnoreCase("Esophagus")) {

            proyecto[0] = "TCGA-ESCA (Esophagus)";

        }
        if (cancer.equalsIgnoreCase("Testis")) {

            proyecto[0] = "TCGA-TGCT (Testis)";

        }
        if (cancer.equalsIgnoreCase("Thymus")) {

            proyecto[0] = "TCGA-THYM (Thymus)";

        }
        if (cancer.equalsIgnoreCase("Pleura")) {

            proyecto[0] = "TCGA-MESO (Pleura)";

        }
        if (cancer.equalsIgnoreCase("Eye")) {

            proyecto[0] = "TCGA-UVM (Eye)";

        }
        if (cancer.equalsIgnoreCase("Lymph Nodes")) {

            proyecto[0] = "TCGA-DLBC (Lymph Nodes)";

        }
        if (cancer.equalsIgnoreCase("Bile Duct")) {

            proyecto[0] = "TCGA-CHOL (Bile Duct)";

        }

        return proyecto;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

/*
        
        RT (Kidney)
        KICH (Kidney)
        KIRP (Kidney)
        KIRK (Kidney)
        WT (Kidney)
        LGG (Brain)
        GBT (Brain)
        NBL (Netvous System)
        BRCA (Breast)
        LUCS (Lung)
        LUAD (Lung)
        AML (Blood)
        READ (Colorectal)
        COAD (Colorectal)
        UCS (Uterus)
        UCEC (Uterus)
        OV (Ovary)
        HNCS (Head and Neck)
        THCA (Thyroid)
        TRAD (Prostate)
        SKCM (Skin)
        STAD (Stomach)
        BLCA (Bladder)
        OS (Bone)
	LIHC (Liver)
	CESC (Cervix)
	ACC (Adrenal Gland)
	PCPG (Adrenal Gland)
	SARC (Soft Tissue)
	LAML (Bone Marrow)
	PAAD (Pancreas)
	ESCA (Esophagus)
	TGCT (Testis)
	THYM (Thymus)
	MESO (Pleura)
	UVM (Eye)
	DLBC (Lymph Nodes)
	CHOL (Bile Duct)      
        
 */
